---

- hosts: azure
  gather_facts: false
  become: true
  vars_files:
    - vars/main.yml

  pre_tasks:
    - name: Install python if not already present.
      raw: test -e /usr/bin/python || (apt -y && apt install -y python-minimal)
      changed_when: false

    - name: Gather facts after Python is definitely present.
      setup:

    - name: Ensure apt cache is updated.
      apt:
        update_cache: true
        cache_valid_time: 600

  roles:
    - geerlingguy.certbot

  tasks:
    - name: Install required packages.
      apt:
        state: present
        pkg:
          - python3-pip
          - build-essential
          - libssl-dev
          - libffi-dev
          - python3-dev
          - python3-venv
          - nginx

    - name: Copy requirements
      copy:
          dest: /tmp/requirements.txt # required. Remote absolute path where the file should be copied to. If I(src) is a directory, this must be a directory too. If I(dest) is a nonexistent path and if either I(dest) ends with "/" or I(src) is a directory, I(dest) is created. If I(src) and I(dest) are files, the parent directory of I(dest) isn't created: the task fails if it doesn't already exist.
          src: ../requirements.txt # not required. Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with "/", only inside contents of that directory are copied to destination. Otherwise, if it does not end with "/", the directory itself with all contents is copied. This behavior is similar to Rsync.

    - name: Create django group
      group:
        name: "{{ group }}"
        state: present

    - name: Create a user to run the django site with.
      user:
        name: "{{ username }}"
        comment: django Azure Website user
        group: "{{ group }}"
        create_home: true
      
    - name: Install virtual environment with pip.
      pip:
        requirements: /tmp/requirements.txt
        virtualenv: /home/{{ username }}/venv
        virtualenv_command: /usr/bin/python3.6 -m venv azure_website
        
    - name: Change permissions of "{{ username }}" home.
      file:
        path: /home/{{ username }}/venv
        mode: 0755
        owner: "{{ username }}"
        group: "{{ group }}"
        state: directory
        recurse: true

    - name: Copy site files.
      copy:
        dest: /home/{{ username }}/
        src: ../django_site
        owner: "{{ username }}"
        group: "{{ group }}"

    - name: Copy gunicorn socket.
      copy:
        src: files/
        dest: /etc/systemd/system/

    - name: Copy gunicorn service.
      template:
        src: templates/gunicorn.service.j2
        dest: /etc/systemd/system/gunicorn.service
        mode: 0644

    - name: Start and enable gunicorn.socket.
      systemd:
        name: gunicorn.socket
        enabled: true
        state: started

    - name: Start and enable gunicorn.
      systemd:
        name: gunicorn  
        enabled: true
        state: started

    - name: Remove Nginx default settings
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/nginx/sites-available/default
        - /etc/nginx/sites-enabled/default
      
    - name: Copy Nginx server configuration.
      template:
        src: templates/display-images.conf.j2
        dest: /etc/nginx/sites-available/display-images.conf
        mode: 0644
        
    - name: Create symbolic link to sites enabled.
      file:
        src: /etc/nginx/sites-available/display-images.conf
        dest: /etc/nginx/sites-enabled/display-images.conf
        owner: root
        group: root
        state: link
      notify: restart nginx
  
  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted
